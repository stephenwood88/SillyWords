//
//  Person+Rabbit.m
//  Dish Sales
//
//  Created by Jeff Lockhart on 4/23/13.
//  Copyright (c) 2013 AppVantage LLC. All rights reserved.
//

#import "Person+Rabbit.h"
#import "Lead+Rabbit.h"
#import "Address+Rabbit.h"
#import "Agreement+Rabbit.h"
#import "TextOverlayViewFront.h"
#import <objc/runtime.h>
#import "EncryptedStringTransformer.h"
#import "AVTextUtilities.h"
#import "AppDelegate.h"
#import "ServiceInfo+Rabbit.h"
#import "Constants.h"
#import "CustomerInfoViewController.h"
#import "SRPremiumLeadDetailTableViewController.h"

// Generated by @dynamic - https://developer.apple.com/library/ios/#documentation/Cocoa/Conceptual/CoreData/Articles/cdAccessorMethods.html
@interface Person (PrimitiveAccessor)

- (NSString *)primitiveSsn;
- (NSData *)primitiveSsnEncrypted;

- (void)setPrimitiveFirstName:(NSString *)firstName;
- (void)setPrimitiveLastName:(NSString *)lastName;
- (void)setPrimitiveBusinessName:(NSString *)businessName;
- (void)setPrimitivePhonePrimary:(NSString *)phonePrimary;
- (void)setPrimitivePhoneAlternate:(NSString *)phoneAlternate;
- (void)setPrimitivePhoneCell:(NSString *)phoneCell;
- (void)setPrimitiveEmail:(NSString *)email;
- (void)setPrimitiveLanguage:(NSString *)language;
- (void)setPrimitiveDateOfBirth:(NSDate *)dateOfBirth;
- (void)setPrimitiveSsn:(NSString *)ssn;
- (void)setPrimitiveSsnEncrypted:(NSData *)ssnEncrypted;
- (void)setPrimitiveEditingView:(UITableViewController *)editingView;

@end

@implementation Person (Rabbit)

- (BOOL)isStarted {
    
    return self.firstName.length || self.lastName.length || self.businessName.length || self.phonePrimary.length || self.phoneAlternate.length || self.phoneCell.length || self.email.length || self.dateOfBirth || self.ssn.length || self.address.isStarted || self.billingAddress.isStarted;
}

// These algorithms should mirror the CustomerInfoViewController verifyInfo algorithm. They should both return the same result.
- (BOOL)isCompleted {
    
    return self.firstName.length && self.lastName.length && self.phonePrimary.length && [AVTextUtilities isValidPhoneNumber:self.phonePrimary] && (!self.phoneAlternate.length || [AVTextUtilities isValidPhoneNumber:self.phoneAlternate]) && (!self.phoneCell.length || [AVTextUtilities isValidPhoneNumber:self.phoneCell]) && (!self.email.length || [AVTextUtilities isValidEmailAddress:self.email]) && (![self.agreement.serviceInfo.provider isEqualToString:kDishNetwork] || (self.dateOfBirth && [AVTextUtilities isValidSocialSecurityOrIndividualTaxIdNumber:self.ssn])) && self.address.isCompleted && (!self.billingAddress.isStarted || self.billingAddress.isCompleted);
}

+ (Person *)newPersonForLead:(Lead *)lead {
    
    NSManagedObjectContext *context = [[SRGlobalState singleton] managedObjectContext];
    Person *person = [NSEntityDescription insertNewObjectForEntityForName:@"Person" inManagedObjectContext:context];
    person.address = [NSEntityDescription insertNewObjectForEntityForName:@"Address" inManagedObjectContext:context];
    person.billingAddress = [NSEntityDescription insertNewObjectForEntityForName:@"Address" inManagedObjectContext:context];
    person.lead = lead;
    return person;
}

+ (Person *)newPersonForAgreement:(Agreement *)agreement {
    
    NSManagedObjectContext *context = [[SRGlobalState singleton] managedObjectContext];
    Person *person = [NSEntityDescription insertNewObjectForEntityForName:@"Person" inManagedObjectContext:context];
    person.address = [NSEntityDescription insertNewObjectForEntityForName:@"Address" inManagedObjectContext:context];
    person.billingAddress = [NSEntityDescription insertNewObjectForEntityForName:@"Address" inManagedObjectContext:context];
    person.agreement = agreement;
    return person;
}

- (void)updateDateModified {
    
    if (self.lead != nil) {
        self.lead.dateModified = [NSDate date];
    }
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (void)postLeadChangeNotification {
    if (self.lead) {
        NSArray *editedLeads = [NSArray arrayWithObject:self.lead];
        [[NSNotificationCenter defaultCenter] postNotificationName:kTitleAttributesChangedNotification object:@{kUpdatedLeads: editedLeads}];
    }
}

- (void)setFirstName:(NSString *)firstName {
    
    [self setFirstNameValue:firstName];
    [self updateDateModified];
    [self postLeadChangeNotification];
//    if (self.lead) {
//        [self.lead setCalendarEventIfNecessary];
//    }
}

- (void)setFirstNameValue:(NSString *)firstName {
    
    [self willChangeValueForKey:@"firstName"];
    [self setPrimitiveFirstName:firstName];
    [self didChangeValueForKey:@"firstName"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.firstName.text = firstName;
    }
    if (self.customerInfoView && (UITableViewController *)self.customerInfoView != self.editingView) {
        self.customerInfoView.firstNameField.text = firstName;
    }
    else if (self.leadDetailView && (UITableViewController *)self.leadDetailView != self.editingView) {
        self.leadDetailView.firstNameTextField.text = firstName;
    }
}

- (void)setLastName:(NSString *)lastName {
    
    [self setLastNameValue:lastName];
    [self updateDateModified];
    [self postLeadChangeNotification];
//    if (self.lead) {
//        [self.lead setCalendarEventIfNecessary];
//    }
}

- (void)setLastNameValue:(NSString *)lastName {
    
    [self willChangeValueForKey:@"lastName"];
    [self setPrimitiveLastName:lastName];
    [self didChangeValueForKey:@"lastName"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.lastName.text = lastName;
    }
    if (self.customerInfoView && (UITableViewController *)self.customerInfoView != self.editingView) {
        self.customerInfoView.lastNameField.text = lastName;
    }
    else if (self.leadDetailView && (UITableViewController *)self.leadDetailView != self.editingView) {
        self.leadDetailView.lastNameTextField.text = lastName;
    }
}

- (void)setBusinessName:(NSString *)businessName {
    
    [self willChangeValueForKey:@"businessName"];
    [self setPrimitiveBusinessName:businessName];
    [self didChangeValueForKey:@"businessName"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.businessName.text = businessName;
    }
    
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (void)setPhonePrimary:(NSString *)phonePrimary {
    
    [self setPhonePrimaryValue:phonePrimary];
    [self updateDateModified];
}

- (void)setPhonePrimaryValue:(NSString *)phonePrimary {
    
    [self willChangeValueForKey:@"phonePrimary"];
    [self setPrimitivePhonePrimary:phonePrimary];
    [self didChangeValueForKey:@"phonePrimary"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.phonePrimary.text = phonePrimary;
    }
    if (self.customerInfoView && (UITableViewController *)self.customerInfoView != self.editingView) {
        self.customerInfoView.phonePrimaryField.text = phonePrimary;
    }
    else if (self.leadDetailView && (UITableViewController *)self.leadDetailView != self.editingView) {
        self.leadDetailView.primaryPhoneTextField.text = phonePrimary;
    }
}

- (void)setPhoneAlternate:(NSString *)phoneAlternate {
    
    [self setPhoneAlternateValue:phoneAlternate];
    [self updateDateModified];
}

- (void)setPhoneAlternateValue:(NSString *)phoneAlternate {
    
    [self willChangeValueForKey:@"phoneAlternate"];
    [self setPrimitivePhoneAlternate:phoneAlternate];
    [self didChangeValueForKey:@"phoneAlternate"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.phoneAlternate.text = phoneAlternate;
    }
    if (self.customerInfoView && (UITableViewController *)self.customerInfoView != self.editingView) {
        self.customerInfoView.phoneAlternateField.text = phoneAlternate;
    }
    else if (self.leadDetailView && (UITableViewController *)self.leadDetailView != self.editingView) {
        self.leadDetailView.altPhoneTextField.text = phoneAlternate;
    }
}

- (void)setPhoneCell:(NSString *)phoneCell {
    
    [self willChangeValueForKey:@"phoneCell"];
    [self setPrimitivePhoneCell:phoneCell];
    [self didChangeValueForKey:@"phoneCell"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.phoneCell.text = phoneCell;
    }
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (void)setEmail:(NSString *)email {
    
    [self setEmailValue:email];
    [self updateDateModified];
}

- (void)setEmailValue:(NSString *)email {
    
    [self willChangeValueForKey:@"email"];
    [self setPrimitiveEmail:email];
    [self didChangeValueForKey:@"email"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.email.text = email;
    }
    if (self.customerInfoView && (UITableViewController *)self.customerInfoView != self.editingView) {
        self.customerInfoView.emailField.text = email;
    }
    else if (self.leadDetailView && (UITableViewController *)self.leadDetailView != self.editingView) {
        self.leadDetailView.emailTextField.text = email;
    }
}

- (void)setDateOfBirth:(NSDate *)dateOfBirth {
    
    [self willChangeValueForKey:@"dateOfBirth"];
    [self setPrimitiveDateOfBirth:dateOfBirth];
    [self didChangeValueForKey:@"dateOfBirth"];
    if (self.agreement.textOverlayFront) {
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        formatter.dateFormat = @"M/d/yyyy";
        self.agreement.textOverlayFront.dateOfBirth.text = [formatter stringFromDate:dateOfBirth];
    }
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (void)setSsn:(NSString *)ssn {
    
    [self willChangeValueForKey:@"ssn"];
    [self setPrimitiveSsn:ssn];
    [self didChangeValueForKey:@"ssn"];
    if (ssn) {
        EncryptedStringTransformer *transformer = (EncryptedStringTransformer *) [NSValueTransformer valueTransformerForName:@"EncryptedStringTransformer"];
        if (!self.salt) {
            self.salt = [AVTextUtilities randomStringOfLength:32];
        }
        transformer.salt = self.salt;
        [self setPrimitiveSsnEncrypted:[transformer transformedValue:ssn]];
    }
    else {
        [self setPrimitiveSsnEncrypted:nil];
    }
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.socialSecurityNumber.text = [AVTextUtilities obfuscatedNumber:ssn showNumDigits:0];
    }
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (void)setLanguage:(NSString *)language {
    [self willChangeValueForKey:@"language"];
    [self setPrimitiveLanguage:language];
    [self didChangeValueForKey:@"language"];
    
    if (self.agreement != nil) {
        self.agreement.dateModified = [NSDate date];
    }
}

- (NSString *)ssn {
    
    [self willAccessValueForKey:@"ssn"];
    NSString *ssn = [self primitiveSsn];
    [self didAccessValueForKey:@"ssn"];
    if (!ssn && self.salt) { // If salt not set, the social security numbe was never saved
        NSData *ssnEncrypted = [self primitiveSsnEncrypted];
        if (ssnEncrypted) {
            EncryptedStringTransformer *transformer = (EncryptedStringTransformer *) [NSValueTransformer valueTransformerForName:@"EncryptedStringTransformer"];
            transformer.salt = self.salt;
            ssn = [transformer reverseTransformedValue:ssnEncrypted];
            [self setPrimitiveSsn:ssn];
        }
    }
    return ssn;
}

@end
