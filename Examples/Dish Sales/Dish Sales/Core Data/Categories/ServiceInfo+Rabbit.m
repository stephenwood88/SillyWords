//
//  ServiceInfo+Rabbit.m
//  Dish Sales
//
//  Created by Jeff Lockhart on 4/24/13.
//  Copyright (c) 2013 AppVantage LLC. All rights reserved.
//

#import "ServiceInfo+Rabbit.h"
#import "Agreement+Rabbit.h"
#import "TextOverlayViewFront.h"
#import "Constants.h"
#import "AppDelegate.h"

// Generated by @dynamic - https://developer.apple.com/library/ios/#documentation/Cocoa/Conceptual/CoreData/Articles/cdAccessorMethods.html
@interface ServiceInfo (PrimitiveAccessor)

- (void)setPrimitiveProvider:(NSString *)provider;
- (void)setPrimitiveTvs:(NSNumber *)tvs;
- (void)setPrimitiveReceiverConfiguration:(NSString *)receiverConfiguration;
- (void)setPrimitivePackage:(NSString *)package;
- (void)setPrimitiveInternetAccess:(NSNumber *)internetAccess;
- (void)setPrimitiveAutoPay:(NSNumber *)autoPay;
- (void)setPrimitivePromoPrice:(NSString *)promoPrice;
- (void)setPrimitiveRegularPrice:(NSString *)regularPrice;
- (void)setPrimitiveSetupPrice:(NSString *)setupPrice;
- (void)setPrimitiveOtherDescription:(NSString *)otherDescription;
- (void)setPrimitiveOtherPrice:(NSString *)otherPrice;
- (void)setPrimitiveOther2Description:(NSString *)other2Description;
- (void)setPrimitiveOther2Price:(NSString *)other2Price;

@end

@implementation ServiceInfo (Rabbit)

- (BOOL)isStarted {
    
    return [self.tvs integerValue] || self.receiverConfiguration.length || self.package.length || self.internetAccess || self.autoPay || self.promoPrice.length || self.regularPrice.length || self.setupPrice.length || self.otherDescription.length || self.otherPrice.length || self.other2Description.length || self.other2Price.length;
}

// These algorithms should mirror the CustomerInfoViewController verifyInfo algorithm. They should both return the same result.
- (BOOL)isCompleted {
    
    return self.provider.length && self.tvs.integerValue && self.receiverConfiguration.length && self.package.length && self.autoPay && self.promoPrice.length && self.regularPrice.length && (self.otherDescription.length || !self.otherPrice.length) && (self.other2Description.length || !self.other2Price.length);
}

- (NSDictionary *)serviceCallDictionary {
    
    NSMutableDictionary *serviceCallDictionary = [@{kReceiverConfiguration: self.receiverConfiguration, kPackage: self.package, kAutoPay: ([self.autoPay boolValue] ? kYes : kNo), kPromoPrice: self.promoPrice, kRegularPrice: self.regularPrice} mutableCopy];
    if (self.internetAccess) {
        serviceCallDictionary[kInternetAccess] = [self.internetAccess boolValue] ? kYes : kNo;
    }
    if (self.setupPrice.length) {
        serviceCallDictionary[kSetupPrice] = self.setupPrice;
    }
    if (self.otherPrice.length && self.otherDescription.length) {
        serviceCallDictionary[self.otherDescription] = self.otherPrice;
    }
    if (self.other2Price.length && self.other2Description.length) {
        serviceCallDictionary[self.other2Description] = self.other2Price;
    }
    return serviceCallDictionary;
}

- (void)setProvider:(NSString *)provider {
    
    [self willChangeValueForKey:@"provider"];
    [self setPrimitiveProvider:provider];
    [self didChangeValueForKey:@"provider"];
    if (provider) {
        NSDictionary *contactAndTerms = [[NSUserDefaults standardUserDefaults] objectForKey:kAgreementContactAndTermsDictionary][[[SRGlobalState singleton] systemAccountId]];
        if (contactAndTerms) {
            if ([provider isEqualToString:kDishNetwork]) {
                self.agreement.terms = contactAndTerms[kAgreementSettingsDishNetworkAgreement];
            }
            else if ([provider isEqualToString:kDirecTv]) {
                self.agreement.terms = contactAndTerms[kAgreementSettingsDirecTVAgreement];
            }
        }
    }
    else {
        self.agreement.terms = nil;
    }
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.dishLogo.hidden = YES;
        self.agreement.textOverlayFront.direcTvLogo.hidden = YES;
        if (provider && ![[SRGlobalState singleton] isAppleTester]) {
            if ([provider isEqualToString:kDishNetwork]) {
                self.agreement.textOverlayFront.dishLogo.hidden = NO;
            }
            else if ([provider isEqualToString:kDirecTv]) {
                self.agreement.textOverlayFront.direcTvLogo.hidden = NO;
            }
        }
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setTvs:(NSNumber *)tvs {
    
    [self willChangeValueForKey:@"tvs"];
    [self setPrimitiveTvs:tvs];
    [self didChangeValueForKey:@"tvs"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.tvs.text = [tvs stringValue];
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setReceiverConfiguration:(NSString *)receiverConfiguration {
    
    [self willChangeValueForKey:@"receiverConfiguration"];
    [self setPrimitiveReceiverConfiguration:receiverConfiguration];
    [self didChangeValueForKey:@"receiverConfiguration"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.receiverConfiguration.text = receiverConfiguration;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setPackage:(NSString *)package {
    
    [self willChangeValueForKey:@"package"];
    [self setPrimitivePackage:package];
    [self didChangeValueForKey:@"package"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.package.text = package;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setInternetAccess:(NSNumber *)internetAccess {
    
    [self willChangeValueForKey:@"internetAccess"];
    [self setPrimitiveInternetAccess:internetAccess];
    [self didChangeValueForKey:@"internetAccess"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.internetAccess.text = [internetAccess boolValue] ? kYes : kNo;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setAutoPay:(NSNumber *)autoPay {
    
    [self willChangeValueForKey:@"autoPay"];
    [self setPrimitiveAutoPay:autoPay];
    [self didChangeValueForKey:@"autoPay"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.autoPay.text = [autoPay boolValue] ? kYes : kNo;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setPromoPrice:(NSString *)promoPrice {
    
    [self willChangeValueForKey:@"promoPrice"];
    [self setPrimitivePromoPrice:promoPrice];
    [self didChangeValueForKey:@"promoPrice"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.promoPrice.text = promoPrice;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setRegularPrice:(NSString *)regularPrice {
    
    [self willChangeValueForKey:@"regularPrice"];
    [self setPrimitiveRegularPrice:regularPrice];
    [self didChangeValueForKey:@"regularPrice"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.regularPrice.text = regularPrice;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setSetupPrice:(NSString *)setupPrice {
    
    [self willChangeValueForKey:@"setupPrice"];
    [self setPrimitiveSetupPrice:setupPrice];
    [self didChangeValueForKey:@"setupPrice"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.setupPrice.text = setupPrice;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setOtherDescription:(NSString *)otherDescription {
    
    [self willChangeValueForKey:@"otherDescription"];
    [self setPrimitiveOtherDescription:otherDescription];
    [self didChangeValueForKey:@"otherDescription"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.otherDescription.text = [NSString stringWithFormat:@"%@:", otherDescription];
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setOtherPrice:(NSString *)otherPrice {
    
    [self willChangeValueForKey:@"otherPrice"];
    [self setPrimitiveOtherPrice:otherPrice];
    [self didChangeValueForKey:@"otherPrice"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.otherPrice.text = otherPrice;
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setOther2Description:(NSString *)other2Description {
    
    [self willChangeValueForKey:@"other2Description"];
    [self setPrimitiveOther2Description:other2Description];
    [self didChangeValueForKey:@"other2Description"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.other2Description.text = [NSString stringWithFormat:@"%@:", other2Description];
    }
    
    self.agreement.dateModified = [NSDate date];
}

- (void)setOther2Price:(NSString *)other2Price {
    
    [self willChangeValueForKey:@"other2Price"];
    [self setPrimitiveOther2Price:other2Price];
    [self didChangeValueForKey:@"other2Price"];
    if (self.agreement.textOverlayFront) {
        self.agreement.textOverlayFront.other2Price.text = other2Price;
    }
    
    self.agreement.dateModified = [NSDate date];
}

@end
