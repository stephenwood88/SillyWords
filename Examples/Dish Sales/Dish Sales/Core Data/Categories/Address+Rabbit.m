//
//  Address+Rabbit.m
//  Dish Sales
//
//  Created by Jeff Lockhart on 4/23/13.
//  Copyright (c) 2013 AppVantage LLC. All rights reserved.
//

#import "Address+Rabbit.h"
#import "Person+Rabbit.h"
#import "Lead+Rabbit.h"
#import "Agreement+Rabbit.h"
#import "TextOverlayViewFront.h"
#import "CustomerInfoViewController.h"
#import "SRPremiumLeadDetailTableViewController.h"
#import "Constants.h"

// Generated by @dynamic - https://developer.apple.com/library/ios/#documentation/Cocoa/Conceptual/CoreData/Articles/cdAccessorMethods.html
@interface Address (PrimitiveAccessor)

- (void)setPrimitiveStreet1:(NSString *)street1;
- (void)setPrimitiveStreet2:(NSString *)street2;
- (void)setPrimitiveCity:(NSString *)city;
- (void)setPrimitiveState:(NSString *)state;
- (void)setPrimitiveZip:(NSString *)zip;

@end

@implementation Address (Rabbit)

- (BOOL)isStarted {
    
    return self.street1.length || self.street2.length || self.city.length || self.state.length || self.zip.length;
}

// These algorithms should mirror the CustomerInfoViewController verifyInfo algorithm. They should both return the same result.
- (BOOL)isCompleted {
    
    return self.street1.length && self.city.length && (self.state.length == 2) && (self.zip.length == 5);
}

- (void)updateDateModified {
    
    if (self.person.agreement != nil) {
        self.person.agreement.dateModified = [NSDate date];
    }else if(self.billingPerson.agreement != nil) {
        self.person.agreement.dateModified = [NSDate date];
    }
    if (self.person.lead != nil) {
        self.person.lead.dateModified = [NSDate date];
    }
}

- (void)postLeadChangeNotification {
    if (self.person.lead) {
        NSArray *editedLeads = [NSArray arrayWithObject:self.person.lead];
        [[NSNotificationCenter defaultCenter] postNotificationName:kTitleAttributesChangedNotification object:@{kUpdatedLeads: editedLeads}];
    }
}

- (void)setStreet1:(NSString *)street1 {
    
    [self setStreet1Value:street1];
    [self updateDateModified];
    [self postLeadChangeNotification];
//    if (self.person.lead) {
//        [self.person.lead setCalendarEventIfNecessary];
//    }
}

- (void)setStreet1Value:(NSString *)street1 {
    
    [self willChangeValueForKey:@"street1"];
    [self setPrimitiveStreet1:street1];
    [self didChangeValueForKey:@"street1"];
    if (self.person.agreement.textOverlayFront) {
        self.person.agreement.textOverlayFront.address.text = street1;
    }else if (self.billingPerson.agreement.textOverlayFront) {
        self.billingPerson.agreement.textOverlayFront.addressBilling.text = street1;
    }
    if (self.person.customerInfoView && (UITableViewController *)self.person.customerInfoView != self.person.editingView) {
        self.person.customerInfoView.addressField.text = street1;
    }
    else if (self.person.leadDetailView && (UITableViewController *)self.person.leadDetailView != self.person.editingView) {
        self.person.leadDetailView.addressTextField.text = street1;
    }
}

- (void)setStreet2:(NSString *)street2 {
    
    [self setStreet2Value:street2];
    [self updateDateModified];
}

- (void)setStreet2Value:(NSString *)street2 {
    
    [self willChangeValueForKey:@"street2"];
    [self setPrimitiveStreet2:street2];
    [self didChangeValueForKey:@"street2"];
    if (self.person.agreement.textOverlayFront) {
        self.person.agreement.textOverlayFront.aptSuite.text = street2;
    }else if (self.billingPerson.agreement.textOverlayFront){
        self.billingPerson.agreement.textOverlayFront.aptSuiteBilling.text = street2;
    }
    if (self.person.customerInfoView && (UITableViewController *)self.person.customerInfoView != self.person.editingView) {
        self.person.customerInfoView.aptSuiteField.text = street2;
    }
    else if (self.person.leadDetailView && (UITableViewController *)self.person.leadDetailView != self.person.editingView) {
        self.person.leadDetailView.aptSuiteTextField.text = street2;
    }
}

- (void)setCity:(NSString *)city {
    
    [self setCityValue:city];
    [self updateDateModified];
    [self postLeadChangeNotification];
//    if (self.person.lead) {
//        [self.person.lead setCalendarEventIfNecessary];
//    }
}

- (void)setCityValue:(NSString *)city {
    
    [self willChangeValueForKey:@"city"];
    [self setPrimitiveCity:city];
    [self didChangeValueForKey:@"city"];
    if (self.person.agreement.textOverlayFront) {
        self.person.agreement.textOverlayFront.city.text = city;
    }else if (self.billingPerson.agreement.textOverlayFront){
        self.billingPerson.agreement.textOverlayFront.cityBilling.text = city;
    }
    if (self.person.customerInfoView && (UITableViewController *)self.person.customerInfoView != self.person.editingView) {
        self.person.customerInfoView.cityField.text = city;
    }
    else if (self.person.leadDetailView && (UITableViewController *)self.person.leadDetailView != self.person.editingView) {
        self.person.leadDetailView.cityTextField.text = city;
    }
}

- (void)setState:(NSString *)state {
    
    [self setStateValue:state];
    [self updateDateModified];
    [self postLeadChangeNotification];
//    if (self.person.lead) {
//        [self.person.lead setCalendarEventIfNecessary];
//    }
}

- (void)setStateValue:(NSString *)state {
    
    [self willChangeValueForKey:@"state"];
    [self setPrimitiveState:state];
    [self didChangeValueForKey:@"state"];
    if (self.person.agreement.textOverlayFront) {
        self.person.agreement.textOverlayFront.state.text = state;
    }else if(self.billingPerson.agreement.textOverlayFront){
        self.billingPerson.agreement.textOverlayFront.stateBilling.text = state;
    }
    if (self.person.customerInfoView && (UITableViewController *)self.person.customerInfoView != self.person.editingView) {
        self.person.customerInfoView.stateField.text = state;
    }
    else if (self.person.leadDetailView && (UITableViewController *)self.person.leadDetailView != self.person.editingView) {
        self.person.leadDetailView.stateButton.titleLabel.text = state;
    }
}

- (void)setZip:(NSString *)zip {
    
    [self setZipValue:zip];
    [self updateDateModified];
//    if (self.person.lead) {
//        [self.person.lead setCalendarEventIfNecessary];
//    }
}

- (void)setZipValue:(NSString *)zip {
    
    [self willChangeValueForKey:@"zip"];
    [self setPrimitiveZip:zip];
    [self didChangeValueForKey:@"zip"];
    if (self.person.agreement.textOverlayFront) {
        self.person.agreement.textOverlayFront.zip.text = zip;
    }else if (self.billingPerson.agreement.textOverlayFront)
    {
        self.billingPerson.agreement.textOverlayFront.zipBilling.text = zip;
    }
    if (self.person.customerInfoView && (UITableViewController *)self.person.customerInfoView != self.person.editingView) {
        self.person.customerInfoView.zipField.text = zip;
    }
    else if (self.person.leadDetailView && (UITableViewController *)self.person.leadDetailView != self.person.editingView) {
        self.person.leadDetailView.zipTextField.text = zip;
    }
}

// Custom validation to ensure that either person, or billingPerson has been set
-(BOOL)validatePerson:(id *)ioValue error:(NSError **)outError {
    
    if (*ioValue == nil) {
        if (self.billingPerson == nil) {
            if (outError != NULL) {
                NSString *errorStr = NSLocalizedStringFromTable(
                                                                @"Either person or billingPerson must be set", @"Address",
                                                                @"validation: address relationship error");
                NSDictionary *userInfoDict = @{ NSLocalizedDescriptionKey : errorStr };
                NSError *error = [[NSError alloc] initWithDomain:@"Person-Address Error"
                                                            code:9999
                                                        userInfo:userInfoDict];
                *outError = error;
            }
            return NO;
        }
        return YES;
    }
    return YES;
}

-(BOOL)validateBillingPerson:(id *)ioValue error:(NSError **)outError {
    
    if (*ioValue == nil) {
        if (self.person == nil) {
            if (outError != NULL) {
                NSString *errorStr = NSLocalizedStringFromTable(
                                                                @"Either person or billingPerson must be set", @"Address",
                                                                @"validation: address relationship error");
                NSDictionary *userInfoDict = @{ NSLocalizedDescriptionKey : errorStr };
                NSError *error = [[NSError alloc] initWithDomain:@"Person-Address Error"
                                                            code:9999
                                                        userInfo:userInfoDict];
                *outError = error;
            }
            return NO;
        }
        return YES;
    }
    return YES;
}

@end
